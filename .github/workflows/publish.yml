name: publish

on:
  workflow_run:
    workflows: ["build", "integration-test"]
    types:
      - completed

jobs:
  publish:
    name: Publish Packages
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      startswith(github.ref, 'refs/tags/v') &&
      !(endsWith(github.ref, '-rc') || endsWith(github.ref, '-dev') || endsWith(github.ref, '-prerelease'))
    runs-on: ubuntu-latest
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: packages
          path: packages

      - name: List packages (for sanity check)
        run: ls -R
        working-directory: packages

      - name: Publish binaries to github for tags
        if: startswith(github.ref, 'refs/tags/v')
        run: |
          sudo npm install --silent --no-progress -g github-release-cli@1.3.1

          OWNER_NAME="${GITHUB_REPOSITORY%%/*}"
          REPO_NAME="${GITHUB_REPOSITORY#*/}"
          RELEASE_ARTIFACT=(./packages/*)

          export GITHUB_TOKEN=${{ secrets.DAPR_BOT_TOKEN }}
          echo "Uploading Nuget packages to GitHub Release"
          github-release upload \
            --owner $OWNER_NAME \
            --repo $REPO_NAME \
            --body "Release dapr dotnet SDK v${REL_VERSION}" \
            --tag "v${REL_VERSION}" \
            --name "Dapr dotnet SDK v${REL_VERSION}" \
            --prerelease true \
            ${RELEASE_ARTIFACT[*]}

      - name: Publish nuget packages to nuget.org
        if: startswith(github.ref, 'refs/tags/v') && !(endsWith(github.ref, '-rc') || endsWith(github.ref, '-dev') || endsWith(github.ref, '-prerelease'))
        run: |
          dotnet nuget push "./packages/Dapr*.nupkg" --skip-duplicate --api-key ${{ secrets.NUGETORG_DAPR_API_KEY }} --source https://api.nuget.org/v3/index.json
