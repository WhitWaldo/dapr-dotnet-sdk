name: example-integration-test

on:
  push:
    branches:
      - master
      - release-*
    tags:
      - v*

  pull_request:
    branches:
      - master
      - release-*

jobs:
  build:
    name: run example-based integration tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dotnet-version: ['8.0', '9.0']
        include:
        - dotnet-version: '8.0'
          display-name: '.NET 8.0'
          framework: 'net8'
          prefix: 'net8'
          install-version: '8.0.x'
        - dotnet-version: '9.0'
          display-name: '.NET 9.0'
          framework: 'net9'
          prefix: 'net9'
          install-version: '9.0.x'
    env:
      NUPKG_OUTDIR: bin/Release/nugets
      GOVER: 1.20.0
      GOOS: linux
      GOARCH: amd64
      GOPROXY: https://proxy.golang.org
      DAPR_CLI_VER: 1.14.0
      DAPR_RUNTIME_VER: 1.14.0
      DAPR_INSTALL_URL: https://raw.githubusercontent.com/dapr/cli/release-1.14/install/install.sh
      DAPR_CLI_REF: ''
    steps:
      - name: Set up Dapr CLI
        run: wget -q ${{ env.DAPR_INSTALL_URL }} -O - | /bin/bash -s ${{ env.DAPR_CLI_VER }}
      - name: Checkout Dapr CLI repo to override dapr command.
        uses: actions/checkout@v2
        if: env.DAPR_CLI_REF != ''
        with:
          repository: dapr/cli
          ref: ${{ env.DAPR_CLI_REF }}
          path: cli
      - name: Checkout Dapr repo to override daprd.
        uses: actions/checkout@v2
        if: env.DAPR_REF != ''
        with:
          repository: dapr/dapr
          ref: ${{ env.DAPR_REF }}
          path: dapr
      - name: Set up Go from dapr/go.mod
        if: env.DAPR_REF != ''
        uses: actions/setup-go@v3
        with:
          go-version-file: "dapr/go.mod"
      - name: Set up Go from cli/go.mod
        if: env.DAPR_REF == '' && env.DAPR_CLI_REF != ''
        uses: actions/setup-go@v3
        with:
          go-version-file: "cli/go.mod"
      - name: Build and override dapr cli with referenced commit.
        if: env.DAPR_CLI_REF != ''
        run: |
          cd cli
          make
          sudo cp dist/linux_amd64/release/dapr /usr/local/bin/dapr
          cd ..
      - name: Initialize Dapr runtime ${{ env.DAPR_RUNTIME_VER }}
        run: |
          dapr uninstall --all
          dapr init --runtime-version ${{ env.DAPR_RUNTIME_VER }}
      - name: Build and override daprd with referenced commit.
        if: env.DAPR_REF != ''
        run: |
          cd dapr
          make
          mkdir -p $HOME/.dapr/bin/
          cp dist/linux_amd64/release/daprd $HOME/.dapr/bin/daprd
          cd ..
      - name: Override placement service.
        if: env.DAPR_REF != ''
        run: |
          docker stop dapr_placement
          cd dapr
          ./dist/linux_amd64/release/placement &
      - uses: actions/checkout@v1
      - name: Parse release version
        run: python ./.github/scripts/get_release_version.py
      - name: Setup ${{ matrix.display-name }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.install-version }}
          dotnet-quality: 'ga'  # Prefer a GA release, but use the RC if not available
      - name: Setup .NET 8 (required)
        uses: actions/setup-dotnet@v3
        if: ${{ matrix.install-version != '8.0.x' }}
        with:
          dotnet-version: '8.0.x'
          dotnet-quality: 'ga'
      - name: Setup .NET 9 (required)
        uses: actions/setup-dotnet@v3
        if: ${{ matrix.install-version != '9.0.x' }}
        with:
          dotnet-version: '9.0.x'
          dotnet-quality: 'ga'
      - name: Install dependencies
        run: dotnet restore
      - name: Build & test projects
        # disable deterministic builds, just for test run. Deterministic builds break coverage for some reason
        run: |
          for project in $(find . -name '*.csproj'); do
            echo "Building and testing $project with .NET ${{matrix.dotnet-version}}"
            dotnet build $project --configuration Release /p:GITHUB_ACTIONS=false
            dotnet run --project $project -- 0
            
      
        